name: release

on:
  release:
    types: [published]

jobs:
  release:
    env:
      RELEASE_VERSION: ${{ github.ref_name }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: "win-x64"
            package_name: "kup_report_generator_win_x64.zip"
          - os: ubuntu-latest
            runtime: "linux-x64"
            package_name: "kup_report_generator_linux_x64.tar.gz"
          - os: macos-latest
            runtime: "osx-x64"
            package_name: "kup_report_generator_macos_x64.zip"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build Project
        run: dotnet build -c Release

      - name: Publish Project
        run: |
          dotnet publish src/Installer/Installer.csproj -c Release -o ${{ env.DOTNET_ROOT }}/publish -r ${{ matrix.runtime }} -p:Version=${{ env.RELEASE_VERSION }} -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained=true
          dotnet publish src/KUPReportGenerator/KUPReportGenerator.csproj -c Release -o ${{ env.DOTNET_ROOT }}/publish -r ${{ matrix.runtime }} -p:Version=${{ env.RELEASE_VERSION }} -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained=true

      - name: Archive Artifact (Windows x64)
        if: matrix.os == 'windows-latest'
        run: powershell Compress-Archive -Path ${{ env.DOTNET_ROOT }}\publish\* -DestinationPath ${{ env.DOTNET_ROOT }}\${{ matrix.package_name }}

      - name: Archive Artifact (Linux x64)
        if: matrix.os == 'ubuntu-latest'
        run: tar cvzf ${{ env.DOTNET_ROOT }}/${{ matrix.package_name }} ${{ env.DOTNET_ROOT }}/publish/*

      - name: Archive Artifact (MacOS x64)
        if: matrix.os == 'macos-latest'
        run: zip -j -r ${{ env.DOTNET_ROOT }}/${{ matrix.package_name }} ${{ env.DOTNET_ROOT }}/publish/*

      - name: Upload Release Asset
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.CI_ACTIONS_TOKEN }}
        with:
          repo_token: ${{ secrets.CI_ACTIONS_TOKEN }}
          tag: ${{ env.RELEASE_VERSION }}
          file: ${{ env.DOTNET_ROOT }}/${{ matrix.package_name }}
          asset_name: ${{ matrix.package_name }}
