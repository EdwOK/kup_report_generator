name: release

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: 'win-x64'
            package_name: 'kup_report_generator_win_x64.zip'
          - os: ubuntu-latest
            runtime: 'linux-x64'
            package_name: 'kup_report_generator_linux_x64.tar.gz'
          - os: macos-latest
            runtime: 'osx-x64'
            package_name: 'kup_report_generator_macos_x64.zip'

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install tools dependencies
        run: npm ci

      - name: Get release version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          touch .release-version
          npx semantic-release --dry-run --debug
          echo "RELEASE_VERSION=$(cat .release-version)" >> $GITHUB_ENV

      - name: Build Project
        run: dotnet build -c Release -p:Version=$RELEASE_VERSION

      - name: Publish Project
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/publish -r ${{ matrix.runtime }} -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained=true
      
      - name: Archive Artifact (Windows x64)
        if: matrix.os == 'windows-latest'
        run: powershell Compress-Archive -Path ${{env.DOTNET_ROOT}}\publish\* -DestinationPath ${{env.DOTNET_ROOT}}\${{ matrix.package_name }}
        
      - name: Archive Artifact (Linux x64)
        if: matrix.os == 'ubuntu-latest'
        run: tar cvzf ${{env.DOTNET_ROOT}}/${{ matrix.package_name }} ${{env.DOTNET_ROOT}}/publish/*
        
      - name: Archive Artifact (MacOS x64)
        if: matrix.os == 'macos-latest'
        run: zip -j -r  ${{env.DOTNET_ROOT}}/${{ matrix.package_name }} ${{env.DOTNET_ROOT}}/publish/*

      - name: Upload Release Asset
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: ${{env.DOTNET_ROOT}}/${{ matrix.package_name }}
          asset_name: ${{ matrix.package_name }}

      - name: Update CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      
